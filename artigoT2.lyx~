#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language brazilian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 1
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Trabalho II - O Labirinto do Horror I
\end_layout

\begin_layout Author
\paragraph_spacing single
Bianca Camargo Machad
\size large
o
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\size large
bianca.camargo@acad.pucrs.br
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

Escola Politécnica - PUCRS
\end_layout

\begin_layout Date
7 de novembro de 2018
\end_layout

\begin_layout Abstract
Este artigo descreve uma solução para o segundo problema proposto na disciplina
 Algoritmos e Estruturas de Dados II no semestre 2018/2, trata-se da determinaçã
o da entrada, saída e distância percorrida entre elas no labirinto de Teseu,
 Ariadne e Minotauro.
 Este, que teve seu segredo descoberto em uma escavação em Creta.
 Foram disponibilizados 10 casos de teste para resolução do problema: cada
 um contém uma matriz de hexadecimais, utilizada para representar o labirinto,
 e dois números que especificam o número de linhas e colunas existentes
 nesta matriz.
 Após descrever a solução do problema, são apresentados os resultados obtidos
 para os casos de teste, juntamente com seus tempos de execução.
\end_layout

\begin_layout Section*
Introdução
\end_layout

\begin_layout Standard
No contexto da disciplina de Algoritmos e Estruturas de Dados II, o enunciado
 do segundo trabalho proposto pode ser resumido da seguinte forma: após
 descoberto o segredo do labirinto de Teseu, Ariadne e Minotauro, sendo
 estes descritos por m x n células, sendo m 
\begin_inset Formula $\geq$
\end_inset

 20 e n 
\begin_inset Formula $\leq$
\end_inset

 500.
 E ainda, cada célula do labirinto contém informações sobre suas conexões
 com as células conectadas a ela diretamente (acima, abaixo, à esquerda
 e à direita) e estas informações representam 4 bits na numeração hexadecimal,
 em que cada bit corresponde à definição de existência ou não de parede
 superior, direita, inferior e à esquerda da célula.
\end_layout

\begin_layout Standard
Um exemplo de valor de célula arbitrária do labirinto é E, que em representação
 binária é 1110.
 A partir disto observe a imagem a seguir, que demonstra o que podemos abstrair
 de informações através deste código.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagens/img1.PNG

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Demonstração do significado de cada bit para uma célula do labirinto.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A partir destas informações sobre o segredo deste labirinto, tem-se como
 objetivo localizar as células de entrada e saída do mesmo, junto com o
 comprimento do caminho percorrido de um ponto ao outro.
 Ao observar as informações prestadas no enunciado e os casos de teste disponibi
lizados, podemos chegar a conclusões inerentes à proposta que podem auxiliar
 na resolução do problema, são elas:
\end_layout

\begin_layout Itemize
Existem somente dois pontos que possibilitam ir para fora do labirinto (uma
 entrada e uma saída);
\end_layout

\begin_layout Itemize
Não há definição clara sobre qual dos dois pontos de saída do labirinto
 é de fato a entrada e vice-versa;
\end_layout

\begin_layout Itemize
As possíveis saídas e entradas do labirinto localizam-se nas bordas do mesmo.
\end_layout

\begin_layout Standard
Para ilustrarmos o problema e trabalharmos na sua resolução, vamos utilizar
 o exemplo fornecido no enunciado do trabalho, este que contém um modelo
 de caso de teste, ilustração do labirinto deste caso e os valores dele
 convertidos em binário, como é possível observar na imagem abaixo.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagens/labirintoCompletoComLegenda.PNG
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Exemplo de caso de teste disponibilizado, representação binária do caso
 de teste e ilustração do labirinto.
 Este exemplo será abordado ao decorrer do artigo.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ao observar este exemplo podemos abstrair mais algumas informações úteis
 para o entendimento da proposta e análise de como a solução deve ser implementa
da.
 São elas:
\end_layout

\begin_layout Itemize
A primeira linha do arquivo de caso de teste, sempre apresentará as dimensões
 do labirinto;
\end_layout

\begin_layout Itemize
As informações sobre as células do caso de teste estão dispostas em forma
 de matriz;
\end_layout

\begin_layout Itemize
É necessário converter o valor de cada célula para que tenhamos as informações
 sobre as paredes da mesma;
\end_layout

\begin_layout Itemize
Uma célula está ligada a outra quando existe uma direção (superior, direita,
 inferior ou esquerda) com o valor 0 e em seguida uma célula existente.
\end_layout

\begin_layout Itemize
Como identificar entrada/saída do labirinto? Sabemos que elas possuem ao
 menos uma das direções com valor = 0, mas para se caracterizar como tal,
 esta direção deve estar nas bordas do labirinto, ou seja, estas são as
 possibilidades para saída/entrada do labirinto: 
\end_layout

\begin_deeper
\begin_layout Itemize
Lado 
\series bold
superior
\series default
 da célula: linha = 0;
\end_layout

\begin_layout Itemize
Lado 
\series bold
esquerdo
\series default
 da célula: coluna = 0;
\end_layout

\begin_layout Itemize
Lado 
\series bold
inferior
\series default
 da célula: linha = tamanho da matriz - 1;
\end_layout

\begin_layout Itemize
Lado 
\series bold
direito
\series default
 da célula: coluna = tamanho da matriz - 1;
\end_layout

\end_deeper
\begin_layout Standard
Os valores apresentados acima, de linha e coluna, são baseados no fato de
 que a matriz é composta por 
\series bold
n
\series default
 linhas e 
\series bold
m 
\series default
colunas, sendo que 
\series bold
n
\series default
 
\begin_inset Formula $\geq$
\end_inset

 0 e 
\series bold
m
\series default
 
\begin_inset Formula $\leq$
\end_inset

 tamanho da matriz.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagens/numeracaoNodos.PNG

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Valores de n,m para cada célula da matriz.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section*
Análise do problema
\end_layout

\begin_layout Standard
Ao analisarmos o labirinto (Figura 3) em uma estrutura de grafos podemos
 observar que cada célula do labirinto corresponde a um vértice do grafo
 a ligação entre estes vértices depende dos valores armazenas no mesmo.
 Portanto, assim teríamos um grafo não direcionado - pois o caminho que
 se faz de um vértice ao outro pode servir tanto para ida quanto para volta.
\end_layout

\begin_layout Standard
Como não existe nenhum critério definido para especificar qual é a entrada
 e qual é a saída, portanto, consideraremos que a entrada será a primeira
 célula para fora do grafo que o algoritmo localizar e a saída será a segunda
 que o algoritmo identificar como tal.
 
\end_layout

\begin_layout Standard
Devido à necessidade de armazenar no vértice informações sobre as paredes
 do mesmo, cabe considerar que cada vértice do grafo deve direcionar para
 tais informações e portanto, será considerada a seguinte estrutura:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagens/cadaNodo.PNG

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Cada vértice do grafo referencia um Nodo.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Com base nestas informações, considerando que já temos informações suficientes
 para determinar qual é o vértice de entrada e qual é o de saída - a partir
 de sua posição na matriz -, o próximo passo é localizar o caminho de um
 ponto ao outro.
 Mas como fazer isto? Um algoritmo que resolve este problema é o algoritmo
 de busca por profundidade no grafo, que recebe uma entrada específica e
 uma saída para percorrer o grafo da seguinte forma: parte de um nodo e
 busca seus adjacentes.
 Vale lembrar que o caminho que precisamos encontrar nada mais é que o conjunto
 de nodos adjacentes necessário para ir de um ponto ao outro.
\end_layout

\begin_layout Standard
Segundo [1], a estratégia seguida pela busca em profundidade é, como seu
 nome implica, procurar 
\begin_inset Quotes eld
\end_inset

mais fundo
\begin_inset Quotes erd
\end_inset

 no grafo sempre que possível.
 Na busca por profundidade, as arestas são exploradas a partir do vértice
\series bold
 v
\series default
 mais recentemente descoberto que ainda tem arestas inexploradas saindo
 dele.
 Quando todas as arestas de 
\series bold
v
\series default
 são exploradas, a busca 
\begin_inset Quotes eld
\end_inset

regressa
\begin_inset Quotes erd
\end_inset

 para explorar as arestas que deixam o vértice a partir do qual 
\series bold
v
\series default
 foi descoberto.
 Esse processo continua até descobrirmos todos os vértices acessíveis a
 partir do vértice de origem inicial.
\end_layout

\begin_layout Standard
A busca em profundidade, neste caso, vai ser feita até que o vértice de
 saída seja encontrado e durante esta busca, é possível contar o número
 de vértices percorridos, o resultado que o problema nos pede.
\end_layout

\begin_layout Section*
Solução
\end_layout

\begin_layout Standard
O algoritmo para o problema em questão foi implementado na linguagem Java
 e segue a lógica descrita anteriormente.
 Os casos de testes estavam disponíveis em um arquivo de texto, portanto
 o algoritmo que localiza os pontos de entrada e saída do labirinto e a
 distância percorrida foi implementado após a leitura do arquivo e armazenamento
 dos dados em uma matriz, na qual cada célula armazena um nodo (Figura 3).
\end_layout

\begin_layout Standard
O nodo é representado por uma estrutura com os seguintes atributos: superior,
 direita, inferior e esquerda - sendo que cada um deles armazena um bit
 -, marca - para controlar se o nodo já foi visitado na busca por profundidade
 - e uma lista de adjacentes do nodo.
\end_layout

\begin_layout Standard
A imagem a seguir também é relacionada ao labirinto apresentado na introdução,
 está disposta afim de ilustrar as informações que serão utilizadas no algoritmo
 que será descrito a seguir.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagens/saidaTerminalMatriz.PNG
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Imagem dos bits armazenado em cada nodo da matriz.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
O algoritmo a seguir localiza a entrada e saída do labirinto (Figura 2,
 3 e 4) e armazena as coordenadas x e y destas em uma lista chamada 
\series bold
pontos
\series default
.
\end_layout

\begin_layout LyX-Code
para i de 0 ate tamanho da matriz {
\end_layout

\begin_deeper
\begin_layout LyX-Code
//testa paredes superiores dos nodos da linha 0 da matriz
\end_layout

\begin_layout LyX-Code
se (matriz[0][i].superior == 0)
\end_layout

\begin_deeper
\begin_layout LyX-Code
adiciona 0 em ponto;//coordenada da linha armazenada
\end_layout

\begin_layout LyX-Code
adiciona i em ponto;//coordenada da coluna armazenada
\end_layout

\end_deeper
\begin_layout LyX-Code
//testa paredes esquerdas dos nodos da coluna 0
\end_layout

\begin_layout LyX-Code
se (matriz[i][0].esquerda == 0) 
\end_layout

\begin_deeper
\begin_layout LyX-Code
adiciona i em ponto;
\end_layout

\begin_layout LyX-Code
adiciona 0 em ponto;
\end_layout

\end_deeper
\begin_layout LyX-Code
//testa paredes inferiores dos nodos da ultima linha da matriz (tamanho
 da matriz -1)
\end_layout

\begin_layout LyX-Code
se (matriz[tamanhoDaMatriz-1][i].inferior == 0) 
\end_layout

\begin_deeper
\begin_layout LyX-Code
adiciona (tamanhoDaMatriz-1) em ponto;
\end_layout

\begin_layout LyX-Code
adiciona i em ponto;
\end_layout

\end_deeper
\begin_layout LyX-Code
//testa paredes direitas dos nodos da ultima coluna da matriz (tamanho da
 matriz -1)
\end_layout

\begin_layout LyX-Code
se (matriz[i][tamanhoDaMatriz-1].direita == 0) 
\end_layout

\begin_deeper
\begin_layout LyX-Code
adiciona i em ponto;
\end_layout

\begin_layout LyX-Code
adiciona (tamanhoDaMatriz-1) em ponto;
\end_layout

\end_deeper
\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
Ao final da execução do algoritmo acima, 
\series bold
pontos 
\series default
terá 4 coordenadas, sendo as duas primeiras x e y da célula em que se encontra
 a entrada do labirinto e as duas últimas referentes à saída do labirinto.
 E com isso podemos chamar o método 
\series bold
buscaProf 
\series default
que recebe por parâmetro o nodo de entrada do labirinto e um contador, inicialme
nte com o valor 0.
 Este contador armazenará o número de nodos percorridos para chegar na saída
 do labirinto, a partir da entrada.
 
\end_layout

\begin_layout LyX-Code
buscaProf(Nodo atual, contador) {
\end_layout

\begin_deeper
\begin_layout LyX-Code
//critério de parada: se chegou no objetivo
\end_layout

\begin_layout LyX-Code
se (atual == saida)
\end_layout

\begin_deeper
\begin_layout LyX-Code
retorna contador
\end_layout

\end_deeper
\begin_layout LyX-Code
//marca o nodo como visitado
\end_layout

\begin_layout LyX-Code
nodo.marca = 1
\end_layout

\begin_layout LyX-Code
para cada nodo n adjacente de nodo atual 
\end_layout

\begin_deeper
\begin_layout LyX-Code
se n não foi visitado
\end_layout

\begin_deeper
\begin_layout LyX-Code
contador++
\end_layout

\begin_layout LyX-Code
//busca o próximo adjacente ao nodo atual
\end_layout

\begin_layout LyX-Code
contador = buscaProf(n,contador)
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout LyX-Code
retorna contador
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
Observe que, para que o algoritmo acima funcione corretamente, é necessário
 que o atributo contendo a lista de adjacentes do nodo esteja completa.
 O algoritmo a seguir (setaAdjacentes) insere todos os nodos adjacentes
 (diretamente ligados ao nodo em questão) na lista correspondente, possibilitand
o que o algoritmo 
\series bold
buscaProf 
\series default
retorne o número de tamanho do caminho percorrido da entrada até a saída
 do labirinto.
\end_layout

\begin_layout LyX-Code
setaAdjacentes() {
\end_layout

\begin_layout LyX-Code
//critério de parada: se chegou no objetivo
\end_layout

\begin_deeper
\begin_layout LyX-Code
para i de 0 até (tamanhDaMatriz-1)
\end_layout

\begin_deeper
\begin_layout LyX-Code
para j de 0 até (tamanhDaMatriz-1)
\end_layout

\begin_deeper
\begin_layout LyX-Code
se (matriz[i][j].superior == 0) e i maior que 0
\end_layout

\begin_deeper
\begin_layout LyX-Code
adiciona m[i-1][j] na lista de adjacentes de m[i][j]
\end_layout

\end_deeper
\begin_layout LyX-Code
se (matriz[i][j].direita == 0) e j menor que (tamanho da matriz - 1)
\end_layout

\begin_deeper
\begin_layout LyX-Code
adiciona m[i][j+1] na lista de adjacentes de m[i][j]
\end_layout

\end_deeper
\begin_layout LyX-Code
se (matriz[i][j].inferior == 0) e i menor que (tamanho da matriz - 1)
\end_layout

\begin_deeper
\begin_layout LyX-Code
adiciona m[i+1][j] na lista de adjacentes de m[i][j]
\end_layout

\end_deeper
\begin_layout LyX-Code
se (matriz[i][j].esquerda == 0) e j maior que 0
\end_layout

\begin_deeper
\begin_layout LyX-Code
adiciona m[i][j-1] na lista de adjacentes de m[i][j]
\end_layout

\end_deeper
\end_deeper
\end_deeper
\end_deeper
\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
Utilizando as coordenadas dos nodos na matriz, como mostrado na Figura 3,
 foi possível obter os adjacentes de cada nodo de acordo com a direção em
 que não havia parede (valor = 0).
 Com este algoritmo foi possível localizar os nodos adjacentes e então realizar
 a busca por profundidade, para no fim obtermos os resultados esperados.
\end_layout

\begin_layout Standard
Para o algoritmo abordado como exemplo ao longo deste artigo, obteve-se
 os seguintes resultados:
\end_layout

\begin_layout Itemize
Entrada: c2,3 (célula na linha 2 e coluna 3)
\end_layout

\begin_layout Itemize
Saída: c0,3 (célula na linha 0 e coluna 3)
\end_layout

\begin_layout Itemize
Distância: 15 células percorridas.
\end_layout

\begin_layout Standard
Na imagem a seguir, encontra-se a ilustração destes resultados.
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagens/imagemCaminhoCompleto.PNG
	scale 80
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Caminho (em verde) percorrido no labirinto de exemplo.
 Célula de entrada: c2,3 e célula de saída: c0,3
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section*
Resultados
\end_layout

\begin_layout Standard
Os resultados obtidos com os casos de testes, disponibilizados junto ao
 problema, exigiram um tempo de execução do algoritmo que variou entre 78
 e 6.542 milissegundos e esta diferença de tempo deve-se à complexidade das
 estruturadas das matrizes contidas em cada caso.
\end_layout

\begin_layout Standard
Na tabela a seguir são apresentados os resultados obtidos para cada caso
 de teste, contendo o tempo de execução desde a leitura do arquivo até o
 retorno do resultado, além do retorno sobre a entrada e saída do labirinto
 e a distância (quantidade de nodos percorridos no caminho da entrada até
 o fim do labirinto).
\end_layout

\begin_layout Standard
\align center

\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Caso de teste
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Entrada: c(linha,coluna)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Saída: c(linha,coluna)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Distância
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tempo (milissegundos)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
caso25c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c0,3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c24,12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
624
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
78
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
caso50c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c17,49
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c49,43
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.496 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
268
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
caso75c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c7,0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c0,60
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5.624
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
303
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
caso100c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c11,0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c0,85
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
621
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8.418
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
caso150c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c51,0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c112,149
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22.492
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
809
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
caso200c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c0,91
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c157,0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
39.999
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.395
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
caso250c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c53,0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c100,0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
62.499
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.911
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
caso300c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c274,299
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c279,0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
89.760
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.590
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
caso400c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c9,399
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c38,0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
159.997
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.134
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
caso500c
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c0,212
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c0,381
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
221.421
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6.105
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
Tabela 1: Resultados dos casos de teste aplicados ao algoritmo desenvolvido.
\end_layout

\begin_layout Section*
Conclusões
\end_layout

\begin_layout Standard
A solução desenvolvida e apresentada ao longo deste artigo obteve resultados
 satisfatórios em relação às saídas esperadas e o tempo necessário para
 que o algoritmo resolvesse os problemas disponíveis nos casos de teste.
 Tendo em vista que algumas decisões a nível lógico e estrutural do código
 podem afetar de forma significativa os resultados e eficiência do algoritmo,
 foi de extrema importância o entendimento do problema como um todo e detalhamen
to das informações inerentes à estrutura do labirinto.
 O que possibilitou chegar-se a resultados satisfatórios e o objetivo principal
 concluído.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "1"
key "key-2"
literal "false"

\end_inset

Cormen, Thomas H., Leiserson, Charles E., Rivest, Ronald L., Stein, Cliford:
 
\begin_inset Quotes eld
\end_inset

Algoritmos, Teoria e Prática
\begin_inset Quotes erd
\end_inset

.
 2° ed.
 Elsevier, 2002, 429 p.
\end_layout

\end_body
\end_document
